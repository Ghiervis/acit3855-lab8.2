version: "3.8"

services:
  #################################################################
  # ZOOKEEPER
  #################################################################
  zookeeper:
    image: zookeeper:3.4.13
    container_name: zookeeper
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/opt/zookeeper-3.4.13/data
    networks:
      - internal_net

  #################################################################
  # KAFKA
  #################################################################
  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/kafka:/kafka/kafka-logs
    networks:
      - internal_net

  #################################################################
  # MYSQL
  #################################################################
  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: events
    ports:
      - "3306:3306"
    volumes:
      - ./data/database:/var/lib/mysql
    networks:
      - internal_net

  #################################################################
  # RECEIVER SERVICE
  #################################################################
  receiver:
    build:
      context: ./receiver
      dockerfile: Dockerfile
    container_name: receiver
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    volumes:
      # Bind-mount your logs if receiver writes to /app/receiver.log
      - ./logs/receiver.log:/app/receiver.log
      # If your receiver has a config file in config/receiver_config.yml
      - ./config/receiver_config.yml:/app/config/receiver_config.yml
    networks:
      - internal_net

  #################################################################
  # STORAGE SERVICE
  #################################################################
  storage:
    build:
      context: ./storage
      dockerfile: Dockerfile
    container_name: storage
    depends_on:
      - mysql
      - kafka
    ports:
      - "8090:8090"
    volumes:
      - ./logs/storage.log:/app/storage.log
      - ./config/storage_config.yml:/app/config/storage_config.yml
    networks:
      - internal_net

volumes:
  zookeeper_data:

networks:
  internal_net:
    driver: bridge
